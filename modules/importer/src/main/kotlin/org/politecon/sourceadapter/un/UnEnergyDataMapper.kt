package org.politecon.sourceadapter.un

import com.neovisionaries.i18n.CountryCode
import org.politecon.common.datamodel.*
import org.politecon.sourceadapter.DataMapper
import org.politecon.util.mapFindByValue

class UnEnergyDataMapper : DataMapper {

    override fun countryFromExternal(external: String): CountryCode {
        return COUNTRIES[external] ?: CountryCode.UNDEFINED
    }

    override fun areaFromExternal(external: String): Area {
        TODO("Not yet implemented")
    }

    override fun subjectFromExternal(external: String): DataSubject {
        return SUBJECTS[external] ?: DataSubject.UNKNOWN
    }

    override fun dimensionFromExternal(external: String): DataDimension {
        return DIMENSIONS[external] ?: DataDimension.UNKNOWN
    }

    override fun unitFromExternal(external: String): DataUnit {
        return UNITS[external] ?: DataUnit.UNKNOWN
    }

    override fun sexFromExternal(external: String): Sex {
        TODO("Not yet implemented")
    }

    override fun countryToExternal(countryCode: CountryCode): String {
        return mapFindByValue(COUNTRIES, countryCode) ?: ""
    }

    override fun areaToExternal(area: Area): String {
        TODO("Not yet implemented")
    }

    override fun subjectToExternal(subject: DataSubject): String {
        return mapFindByValue(SUBJECTS, subject) ?: ""
    }

    override fun dimensionToExternal(dataDimension: DataDimension): String {
        return mapFindByValue(DIMENSIONS, dataDimension) ?: ""
    }

    override fun unitToExternal(dataUnit: DataUnit): String {
        return mapFindByValue(UNITS, dataUnit) ?: ""
    }

    override fun sexToExternal(sex: Sex): String {
        TODO("Not yet implemented")
    }

    companion object {
        private val COUNTRIES = mapOf(
            "004" to CountryCode.findByName("Afghanistan").first(),
            "008" to CountryCode.findByName("Albania").first(),
            "012" to CountryCode.findByName("Algeria").first(),
            "016" to CountryCode.findByName("American Samoa").first(),
            "020" to CountryCode.findByName("Andorra").first(),
            "024" to CountryCode.findByName("Angola").first(),
            "028" to CountryCode.findByName("Antigua and Barbuda").first(),
            "031" to CountryCode.findByName("Azerbaijan").first(),
            "032" to CountryCode.findByName("Argentina").first(),
            "036" to CountryCode.findByName("Australia").first(),
            "040" to CountryCode.findByName("Austria").first(),
            "044" to CountryCode.findByName("Bahamas").first(),
            "048" to CountryCode.findByName("Bahrain").first(),
            "050" to CountryCode.findByName("Bangladesh").first(),
            "051" to CountryCode.findByName("Armenia").first(),
            "052" to CountryCode.findByName("Barbados").first(),
            "056" to CountryCode.findByName("Belgium").first(),
            "060" to CountryCode.findByName("Bermuda").first(),
            "064" to CountryCode.findByName("Bhutan").first(),
            "068" to CountryCode.BO,
            "070" to CountryCode.findByName("Bosnia and Herzegovina").first(),
            "072" to CountryCode.findByName("Botswana").first(),
            "076" to CountryCode.findByName("Brazil").first(),
            "084" to CountryCode.findByName("Belize").first(),
            "090" to CountryCode.findByName("Solomon Islands").first(),
            "092" to CountryCode.VG,
            "096" to CountryCode.findByName("Brunei Darussalam").first(),
            "100" to CountryCode.findByName("Bulgaria").first(),
            "104" to CountryCode.findByName("Myanmar").first(),
            "108" to CountryCode.findByName("Burundi").first(),
            "112" to CountryCode.findByName("Belarus").first(),
            "116" to CountryCode.findByName("Cambodia").first(),
            "120" to CountryCode.findByName("Cameroon").first(),
            "124" to CountryCode.findByName("Canada").first(),
            "132" to CountryCode.CV,
            "136" to CountryCode.findByName("Cayman Islands").first(),
            "140" to CountryCode.findByName("Central African Republic").first(),
            "144" to CountryCode.findByName("Sri Lanka").first(),
            "148" to CountryCode.findByName("Chad").first(),
            "152" to CountryCode.findByName("Chile").first(),
            "156" to CountryCode.findByName("China").first(),
            "170" to CountryCode.findByName("Colombia").first(),
            "174" to CountryCode.findByName("Comoros").first(),
            "175" to CountryCode.findByName("Mayotte").first(),
            "178" to CountryCode.findByName("Congo").first(),
            "180" to CountryCode.CD,
            "184" to CountryCode.findByName("Cook Islands").first(),
            "188" to CountryCode.findByName("Costa Rica").first(),
            "191" to CountryCode.findByName("Croatia").first(),
            "192" to CountryCode.findByName("Cuba").first(),
            "196" to CountryCode.findByName("Cyprus").first(),
            "203" to CountryCode.findByName("Czech Republic").first(),
            "204" to CountryCode.findByName("Benin").first(),
            "208" to CountryCode.findByName("Denmark").first(),
            "212" to CountryCode.findByName("Dominica").first(),
            "214" to CountryCode.findByName("Dominican Republic").first(),
            "218" to CountryCode.findByName("Ecuador").first(),
            "222" to CountryCode.findByName("El Salvador").first(),
            "226" to CountryCode.findByName("Equatorial Guinea").first(),
            "231" to CountryCode.findByName("Ethiopia").first(),
            "232" to CountryCode.findByName("Eritrea").first(),
            "233" to CountryCode.findByName("Estonia").first(),
            "234" to CountryCode.FO,
            "238" to CountryCode.FK,
            "242" to CountryCode.findByName("Fiji").first(),
            "246" to CountryCode.findByName("Finland").first(),
            "251" to CountryCode.FR,
            "254" to CountryCode.findByName("French Guiana").first(),
            "258" to CountryCode.findByName("French Polynesia").first(),
            "262" to CountryCode.findByName("Djibouti").first(),
            "266" to CountryCode.findByName("Gabon").first(),
            "268" to CountryCode.findByName("Georgia").first(),
            "270" to CountryCode.findByName("Gambia").first(),
            "275" to CountryCode.PS,
            "276" to CountryCode.findByName("Germany").first(),
            "280" to CountryCode.findByName("Germany").first(),
            "288" to CountryCode.findByName("Ghana").first(),
            "292" to CountryCode.findByName("Gibraltar").first(),
            "296" to CountryCode.findByName("Kiribati").first(),
            "300" to CountryCode.findByName("Greece").first(),
            "304" to CountryCode.findByName("Greenland").first(),
            "308" to CountryCode.findByName("Grenada").first(),
            "312" to CountryCode.findByName("Guadeloupe").first(),
            "316" to CountryCode.findByName("Guam").first(),
            "320" to CountryCode.findByName("Guatemala").first(),
            "324" to CountryCode.findByName("Guinea").first(),
            "328" to CountryCode.findByName("Guyana").first(),
            "332" to CountryCode.findByName("Haiti").first(),
            "340" to CountryCode.findByName("Honduras").first(),
            "344" to CountryCode.findByName("Hong Kong").first(),
            "348" to CountryCode.findByName("Hungary").first(),
            "352" to CountryCode.findByName("Iceland").first(),
            "356" to CountryCode.findByName("India").first(),
            "360" to CountryCode.findByName("Indonesia").first(),
            "364" to CountryCode.IR,
            "368" to CountryCode.findByName("Iraq").first(),
            "372" to CountryCode.findByName("Ireland").first(),
            "376" to CountryCode.findByName("Israel").first(),
            "382" to CountryCode.IT,
            "384" to CountryCode.CI,
            "388" to CountryCode.findByName("Jamaica").first(),
            "392" to CountryCode.findByName("Japan").first(),
            "398" to CountryCode.findByName("Kazakhstan").first(),
            "400" to CountryCode.findByName("Jordan").first(),
            "404" to CountryCode.findByName("Kenya").first(),
            "408" to CountryCode.KP,
            "410" to CountryCode.KR,
            "414" to CountryCode.findByName("Kuwait").first(),
            "417" to CountryCode.findByName("Kyrgyzstan").first(),
            "418" to CountryCode.findByName("Lao People's Democratic Republic").first(),
            "422" to CountryCode.findByName("Lebanon").first(),
            "426" to CountryCode.findByName("Lesotho").first(),
            "428" to CountryCode.findByName("Latvia").first(),
            "430" to CountryCode.findByName("Liberia").first(),
            "434" to CountryCode.findByName("Libya").first(),
            "438" to CountryCode.findByName("Liechtenstein").first(),
            "440" to CountryCode.findByName("Lithuania").first(),
            "442" to CountryCode.findByName("Luxembourg").first(),
            "446" to CountryCode.findByName("Macao").first(),
            "450" to CountryCode.findByName("Madagascar").first(),
            "454" to CountryCode.findByName("Malawi").first(),
            "458" to CountryCode.findByName("Malaysia").first(),
            "462" to CountryCode.findByName("Maldives").first(),
            "466" to CountryCode.findByName("Mali").first(),
            "470" to CountryCode.findByName("Malta").first(),
            "474" to CountryCode.findByName("Martinique").first(),
            "478" to CountryCode.findByName("Mauritania").first(),
            "480" to CountryCode.findByName("Mauritius").first(),
            "484" to CountryCode.findByName("Mexico").first(),
            "496" to CountryCode.findByName("Mongolia").first(),
            "498" to CountryCode.MD,
            "499" to CountryCode.findByName("Montenegro").first(),
            "500" to CountryCode.findByName("Montserrat").first(),
            "504" to CountryCode.findByName("Morocco").first(),
            "508" to CountryCode.findByName("Mozambique").first(),
            "512" to CountryCode.findByName("Oman").first(),
            "516" to CountryCode.findByName("Namibia").first(),
            "520" to CountryCode.findByName("Nauru").first(),
            "524" to CountryCode.findByName("Nepal").first(),
            "528" to CountryCode.findByName("Netherlands").first(),
            "530" to CountryCode.findByName("Netherlands Antilles").first(),
            "531" to CountryCode.findByName("Curaçao").first(),
            "533" to CountryCode.findByName("Aruba").first(),
            "535" to CountryCode.findByName("Bonaire, Sint Eustatius and Saba").first(),
            "540" to CountryCode.findByName("New Caledonia").first(),
            "548" to CountryCode.findByName("Vanuatu").first(),
            "554" to CountryCode.findByName("New Zealand").first(),
            "558" to CountryCode.findByName("Nicaragua").first(),
            "562" to CountryCode.findByName("Niger").first(),
            "566" to CountryCode.findByName("Nigeria").first(),
            "570" to CountryCode.findByName("Niue").first(),
            "579" to CountryCode.NO,
            "580" to CountryCode.findByName("Northern Mariana Islands").first(),
            "583" to CountryCode.findByName("Micronesia, Federated States of").first(),
            "584" to CountryCode.findByName("Marshall Islands").first(),
            "585" to CountryCode.findByName("Palau").first(),
            "586" to CountryCode.findByName("Pakistan").first(),
            "591" to CountryCode.findByName("Panama").first(),
            "598" to CountryCode.findByName("Papua New Guinea").first(),
            "600" to CountryCode.findByName("Paraguay").first(),
            "604" to CountryCode.findByName("Peru").first(),
            "608" to CountryCode.findByName("Philippines").first(),
            "616" to CountryCode.findByName("Poland").first(),
            "620" to CountryCode.findByName("Portugal").first(),
            "624" to CountryCode.GW,
            "626" to CountryCode.TL,
            "630" to CountryCode.findByName("Puerto Rico").first(),
            "634" to CountryCode.findByName("Qatar").first(),
            "638" to CountryCode.RE,
            "642" to CountryCode.findByName("Romania").first(),
            "643" to CountryCode.findByName("Russian Federation").first(),
            "646" to CountryCode.findByName("Rwanda").first(),
            "654" to CountryCode.SH,
            "659" to CountryCode.findByName("Saint Kitts and Nevis").first(),
            "660" to CountryCode.findByName("Anguilla").first(),
            "662" to CountryCode.findByName("Saint Lucia").first(),
            "666" to CountryCode.findByName("Saint Pierre and Miquelon").first(),
            "670" to CountryCode.findByName("Saint Vincent and the Grenadines").first(),
            "678" to CountryCode.findByName("Sao Tome and Principe").first(),
            "682" to CountryCode.findByName("Saudi Arabia").first(),
            "686" to CountryCode.findByName("Senegal").first(),
            "688" to CountryCode.findByName("Serbia").first(),
            "690" to CountryCode.findByName("Seychelles").first(),
            "694" to CountryCode.findByName("Sierra Leone").first(),
            "702" to CountryCode.findByName("Singapore").first(),
            "703" to CountryCode.findByName("Slovakia").first(),
            "704" to CountryCode.findByName("Viet Nam").first(),
            "705" to CountryCode.findByName("Slovenia").first(),
            "706" to CountryCode.findByName("Somalia").first(),
            "710" to CountryCode.findByName("South Africa").first(),
            "716" to CountryCode.findByName("Zimbabwe").first(),
            "720" to CountryCode.YE,
            "724" to CountryCode.findByName("Spain").first(),
            "728" to CountryCode.findByName("South Sudan").first(),
            "729" to CountryCode.findByName("Sudan").first(),
            "736" to CountryCode.SD,
            "740" to CountryCode.findByName("Suriname").first(),
            "748" to CountryCode.findByName("Eswatini").first(),
            "752" to CountryCode.findByName("Sweden").first(),
            "757" to CountryCode.findByName("Switzerland").first(),
            "760" to CountryCode.findByName("Syrian Arab Republic").first(),
            "762" to CountryCode.findByName("Tajikistan").first(),
            "764" to CountryCode.findByName("Thailand").first(),
            "768" to CountryCode.findByName("Togo").first(),
            "776" to CountryCode.findByName("Tonga").first(),
            "780" to CountryCode.findByName("Trinidad and Tobago").first(),
            "784" to CountryCode.findByName("United Arab Emirates").first(),
            "788" to CountryCode.findByName("Tunisia").first(),
            "792" to CountryCode.findByName("Turkey").first(),
            "795" to CountryCode.findByName("Turkmenistan").first(),
            "796" to CountryCode.findByName("Turks and Caicos Islands").first(),
            "798" to CountryCode.findByName("Tuvalu").first(),
            "800" to CountryCode.findByName("Uganda").first(),
            "804" to CountryCode.findByName("Ukraine").first(),
            "807" to CountryCode.MK,
            "810" to CountryCode.SU,
            "818" to CountryCode.findByName("Egypt").first(),
            "826" to CountryCode.findByName("United Kingdom").first(),
            "831" to CountryCode.findByName("Guernsey").first(),
            "832" to CountryCode.findByName("Jersey").first(),
            "833" to CountryCode.findByName("Isle of Man").first(),
            "834" to CountryCode.TZ,
            "840" to CountryCode.findByName("United States").first(),
            "850" to CountryCode.VI,
            "854" to CountryCode.findByName("Burkina Faso").first(),
            "858" to CountryCode.findByName("Uruguay").first(),
            "860" to CountryCode.findByName("Uzbekistan").first(),
            "862" to CountryCode.VE,
            "876" to CountryCode.WF,
            "882" to CountryCode.findByName("Samoa").first(),
            "886" to CountryCode.YE,
            "887" to CountryCode.findByName("Yemen").first(),
            "890" to CountryCode.findByName("Yugoslavia").first(),
            "891" to CountryCode.findByName("Serbia and Montenegro").first(),
            "894" to CountryCode.findByName("Zambia").first()
        )

        private val SUBJECTS = mapOf(
            "0100" to DataSubject.HARD_COAL,
            "0110" to DataSubject.ANTHRACITE,
            "0121" to DataSubject.COKING_COAL,
            "0129" to DataSubject.OTHER_BITUMINOUS_COAL,
            "0200" to DataSubject.BROWN_COAL,
            "0210" to DataSubject.SUBTOBITUMINOUS_COAL,
            "0220" to DataSubject.LIGNITE,
            "0311" to DataSubject.COKE_OVEN_COKE,
            "0312" to DataSubject.GAS_COKE,
            "0320" to DataSubject.PATENT_FUEL,
            "0330" to DataSubject.BROWN_COAL_BRIQUETTES,
            "0340" to DataSubject.COAL_TAR,
            "0350" to DataSubject.COKE_OVEN_GAS,
            "0360" to DataSubject.GASWORKS_GAS,
            "0371" to DataSubject.BLAST_FURNACE_GAS,
            "0379" to DataSubject.OTHER_RECOVERED_GASES,
            "0390" to DataSubject.OTHER_COAL_PRODUCTS,
            "1100" to DataSubject.PEAT,
            "1200" to DataSubject.PEAT_PRODUCTS,
            "2000" to DataSubject.OIL_SHALE_OIL_SANDS,
            "3000" to DataSubject.NATURAL_GAS,
            "4100" to DataSubject.CONVENTIONAL_CRUDE_OIL,
            "4200" to DataSubject.NATURAL_GAS_LIQUIDS,
            "4300" to DataSubject.REFINERY_FEEDSTOCKS,
            "4400" to DataSubject.ADDITIVES_AND_OXYGENATES,
            "4500" to DataSubject.OTHER_HYDROCARBONS,
            "4610" to DataSubject.REFINERY_GAS,
            "4620" to DataSubject.ETHANE,
            "4630" to DataSubject.LIQUIFIED_PETROLEUM_GAS,
            "4640" to DataSubject.NAPHTHA,
            "4651" to DataSubject.AVIATION_GASOLINE,
            "4652" to DataSubject.MOTOR_GASOLINE,
            "5212" to DataSubject.BIOGASOLINE,
            "4653" to DataSubject.GASOLINE_JET_FUEL,
            "4661" to DataSubject.KEROSENE_JET_FUEL,
            "5232" to DataSubject.BIO_JET_KEROSENE,
            "4669" to DataSubject.OTHER_KEROSENE,
            "4670" to DataSubject.GAS_OIL_DIESEL_OIL,
            "5222" to DataSubject.BIODIESEL,
            "4680" to DataSubject.FUEL_OIL,
            "4691" to DataSubject.SPECIAL_INDUSTRIAL_SPIRITS,
            "4692" to DataSubject.LUBRICANTS,
            "4693" to DataSubject.PARAFFIN_WAXES,
            "4694" to DataSubject.PETROLEUM_COKE,
            "4695" to DataSubject.BITUMEN,
            "4699" to DataSubject.OTHER_OIL_PRODUCTS,
            "5110" to DataSubject.FUELWOOD,
            "5120" to DataSubject.BAGASSE,
            "5130" to DataSubject.ANIMAL_WASTE,
            "5140" to DataSubject.BLACK_LIQUOR,
            "5150" to DataSubject.OTHER_VEGETAL_MATERIAL_AND_RESIDUES,
            "5160" to DataSubject.CHARCOAL,
            "5210" to DataSubject.BIOGASOLINE,
            "5220" to DataSubject.BIODIESEL,
            "5230" to DataSubject.BIO_JET_KEROSENE,
            "5290" to DataSubject.OTHER_LIQUID_BIOFUELS,
            "5300" to DataSubject.BIOGASES,
            "6100" to DataSubject.INDUSTRIAL_WASTE,
            "6200" to DataSubject.MUNICIPAL_WASTES,
            "7000" to DataSubject.TOTAL_ELECTRICITY,
            "7000G" to DataSubject.GEOTHERMAL,
            "7000H" to DataSubject.HYDRO,
            "7000N" to DataSubject.NUCLEAR_ELECTRICITY,
            "7000O" to DataSubject.TIDE_WAVE_AND_OCEAN_ELECTRICITY,
            "7000S" to DataSubject.SOLAR_ELECTRICITY,
            "7000T" to DataSubject.THERMAL_ELECTRICITY,
            "7000W" to DataSubject.WIND_ELECTRICITY,
            "8000" to DataSubject.HEAT,
            "8000T" to DataSubject.HEAT_FROM_COMBUSTIBLE_FUELS,
            "9101" to DataSubject.URANIUM,
            "DG" to DataSubject.DIRECT_USE_OF_GEOTHERMAL_HEAT,
            "DS" to DataSubject.DIRECT_USE_OF_SOLAR_THERMAL_HEAT,
            "EC" to DataSubject.ELECTRICITY_NET_POWERPLANTS,
            "GR" to DataSubject.TOTAL_REFINERY_OUTPUT,
            "WF" to DataSubject.FALLING_WATER
        )

        private val DIMENSIONS = mapOf(
            "01" to DataDimension.PRODUCTION,
            "03" to DataDimension.IMPORT,
            "04" to DataDimension.EXPORT,
            "06" to DataDimension.STOCK_CHANGES
        )

        private val UNITS = mapOf(
            "TN" to DataUnit.TON,
            "TJ" to DataUnit.TERRA_JOULE,
            "GWHR" to DataUnit.GIGA_WATT_HOUR
        )
    }
}